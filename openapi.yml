openapi: 3.0.0
info:
  title: Spartan Sensor Mesh
  description: API endpoints definition of the SSM.
  version: 0.0.2
servers:
  - url: mesh.sprtn.io
tags:
  - name: config
    description: Manage the device configuration.
  - name: mesh
    description: Access connected devices in the mesh.
  - name: data
    description: Retrieve reading data.
paths:
  /api/config:
    post:
      operationId: updateConfig
      tags: [config]
      summary: Update configuration
      requestBody:
        description: The new configuration to use.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          description: Successful update
        '400':
          description: Invalid request body
        '500':
          description: Internal server error
  /api/mesh:
    get:
      operationId: listNodes
      tags: [mesh]
      summary: List mesh nodes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mesh'
        '500':
          description: Internal server error
  /api/data:
    get:
      operationId: getData
      tags: [data]
      summary: Get data
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
        '500':
          description: Internal server error
components:
  schemas:
    Mesh:
      type: object
      required:
        - hostname
        - ip
        - port
      properties:
        hostname:
          type: string
        ip:
          type: string
        port:
          type: integer

    Config:
      type: object
      required:
        - model
        - group
        - name
        - password
        - log
        - sensors
      properties:
        model:
          type: string
        group:
          type: string
        name:
          type: string
        password:
          type: string
        log:
          type: object
          required:
            - level
            - console
          properties:
            level:
              type: string
              enum: ["debug", "info", "warning", "error", "critical"]
            console:
              $ref: '#/components/schemas/Bus'
        sensors:
          type: array
          items:
            type: object
            required:
              - type
              - enabled
              - samplingInterval
              - connection
              - readings
            properties:
              type:
                type: string
              enabled:
                type: boolean
              samplingInterval:
                type: integer
              connection:
                $ref: '#/components/schemas/Bus'
              readings:
                type: array
                items:
                  $ref: '#/components/schemas/ReadingConfig'

    Bus:
      type: object
      additionalProperties:
        description: Can be anything, a string, number, object, etc. It's application-specific.

    ReadingConfig:
      type: object
      required:
        - type
        - name
        - averaging
        - widget
      properties:
        type:
          type: string
        name:
          type: string
        averaging:
          type: number
        widget:
          $ref: '#/components/schemas/WidgetConfig'

    Reading:
      type: object
      required:
        - model
        - type
        - name
        - status
        - errors
        - lastError
        - measurements
        - value
        - config
      properties:
        model:
          type: string
        type:
          type: string
        name:
          type: string
        status:
          type: string
        errors:
          type: integer
        lastError:
          type: string
        measurements:
          type: integer
        value:
          type: object
          required:
            - last
            - unit
            - stats
            - range
          properties:
            last:
              type: number
            unit:
              type: string
            stats:
              type: object
              required:
                - mean
                - variance
                - samples
              properties:
                mean:
                  type: number
                variance:
                  type: number
                samples:
                  type: integer
                minimum:
                  type: number
                maximum:
                  type: number
            range:
              type: object
              required:
                - minimum
                - maximum
              properties:
                minimum:
                  type: number
                maximum:
                  type: number
        config:
          $ref: '#/components/schemas/WidgetConfig'

    WidgetConfig:
      type: object
      additionalProperties:
        description: Can be anything, a string, number, object, etc. It's application-specific.

    Data:
      type: object
      required:
        - model
        - group
        - name
        - readings
      properties:
        model:
          type: string
        group:
          type: string
        name:
          type: string
        readings:
          type: array
          items:
            $ref: '#/components/schemas/Reading'
